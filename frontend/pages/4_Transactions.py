import streamlit as st
import requests
import time
from datetime import datetime
from frontend.utils.api import get_user_transactions
from streamlit_local_storage import LocalStorage

local_storage = LocalStorage()

st.set_page_config(
    page_title="–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π - Remooovy",
    layout="wide"
)

def check_auth():
    if "access_token" in st.session_state:
        return True
    
    auth_data = local_storage.getItem("auth_data")
    
    if auth_data and isinstance(auth_data, dict):
        if (time.time() - auth_data.get("timestamp", 0)) < 604800:
            st.session_state.token_type = auth_data["token_type"]
            st.session_state.access_token = auth_data["access_token"]
            return True
    
    return False

if not check_auth():
    st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É")
    st.stop()

st.title("–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π üí∞")

try:
    transactions = get_user_transactions(st.session_state.token_type, st.session_state.access_token)
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {str(e)}")
    st.stop()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
def format_transaction_type(type_str):
    types = {
        "credit_add": "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ",
        "credit_use": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ",
        "credit_refund": "–í–æ–∑–≤—Ä–∞—Ç"
    }
    return types.get(type_str, type_str)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
def format_date(date_str):
    date = datetime.fromisoformat(date_str)
    return date.strftime("%d.%m.%Y %H:%M")

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
if transactions:
    current_balance = transactions[0]["balance_after"]
    st.metric("–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å", f"{current_balance} –∫—Ä–µ–¥–∏—Ç–æ–≤")

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
if transactions:
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
    table_data = []
    for t in transactions:
        amount_str = f"+{t['amount']}" if t['type'] == 'credit_add' else f"-{t['amount']}"
        table_data.append({
            "–î–∞—Ç–∞": format_date(t["created_at"]),
            "–¢–∏–ø": format_transaction_type(t["type"]),
            "–°—É–º–º–∞": amount_str,
            "–ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ": t["balance_after"],
        })
    
    st.dataframe(
        table_data,
        use_container_width=True,
        hide_index=True,
        column_config={
            "–î–∞—Ç–∞": st.column_config.DatetimeColumn(
                "–î–∞—Ç–∞",
                format="DD.MM.YYYY HH:mm"
            ),
            "–°—É–º–º–∞": st.column_config.TextColumn(
                "–°—É–º–º–∞",
                help="+ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ, - —Å–ø–∏—Å–∞–Ω–∏–µ"
            ),
            "–ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ": st.column_config.NumberColumn(
                "–ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ",
                help="–ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏"
            )
        }
    )
else:
    st.info("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π") 